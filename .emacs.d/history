;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(compile-history coding-system-history read-expression-history face-name-history slime-minibuffer-history shell-command-history tmm--history query-replace-history slime-repl-shortcut-history search-ring minibuffer-history file-name-history buffer-name-history yes-or-no-p-history extended-command-history))
(setq coding-system-history '("utf-8-unix" "euc-jp"))
(setq read-expression-history '("(load-theme 'flatland t)"))
(setq face-name-history '("font-lock-comment-delimiter-face"))
(setq slime-minibuffer-history '("(fib 5)" "(fib 5" "fib"))
(setq shell-command-history '("ruby -v" "rmdir rails" "pwd" "cd rails" "mkdir rails" "cd work/ruby/" "ls" "mkdir blog" "cd ../" "/usr/local/bin/opam config exec -- ocaml" "/usr/local/bin/opa/~/work/ocaml/programingu_foundamentals/tree/my-tree.top" "/usr/local/bin/opam config exec -- ocaml -rectypes" "scheme-get-current-symbol-info" "cd work/scheme/" "open"))
(setq tmm--history '("f==>File" "e==>Edit" "o==>Options" "b==>Buffers" "t==>Tools" "w==>Web-Mode" "h==>Help" "f==>File" "e==>Edit" "o==>Options" "b==>Buffers" "t==>Tools" "w==>Web-Mode" "h==>Help" "f==>File" "e==>Edit" "o==>Options" "b==>Buffers" "t==>Tools" "w==>Web-Mode" "h==>Help" "f==>File" "e==>Edit" "o==>Options" "b==>Buffers" "t==>Tools" "w==>Web-Mode" "h==>Help"))
(setq query-replace-history '("pascal" "snake" "#=>" "==" "Not Pascal To Snake" "Not Pascal Case" "PasCalCase" "CaMelCase" "pas_cal_case" "ca_mel_case" "PascalCase" "camelCase" "pascal_case" "camel_case" "#333" "#444" "black" "argv" "arg" "\\w" "A-Za-z" "\\d" "0-9" "camel" "margin" "padding" "h2" "h1" "class" "id" "mytest" "test*" "my_get" "get" "my_" "my-" "my-ge" "aget" "elem" "!elem" "exchange" "replace" "RedBlack.t" "ekikan_tree_t" "t" "rb_tree_t" "ins" "insert" "xa" "x_key" "a" "a_tree" "global_ekikan_tree" "global_ekikan_list" "shuten" "keiyu" "depth" "length" "tree_length" "tree_double" "tree_map (fun n -> 2 * n)" "tree_map" "lst" "lis" "is_even" "even?" "koushin1" "get_ekikan_kyori" "temae_list" "temae" "k" "eki" "kyori_wo_hyoji" "_list" "_t" "saita_ketsueki" "ketsueki_shukei" "gakusei_insert" "the-mc-global-environment" "the-global-environment" "defines" "def" "true" "#t" "proc" "func" "lookup-variable" "lookup-ariable" "car-loop" "count-loop" "null" "zero-answer" "reg-sources" "decrement" "increment" "enable" "enabele" "fail" "fails" "eq?" "=" "body" "exp" "lazy-memo" "lazy" "list-of-args" "my-apply" "apply" "variable" "valiable" "named-let-name" "named-let-var" "let-name" "named-var"))
(setq slime-repl-shortcut-history '("pwd"))
(setq search-ring '("a" "camel_" "0aciag" "org" "データの検索" "file" "var" "v" "削除" "mysqld" "insert" "Interv" "form" "main" "artice" "quote"))
(setq minibuffer-history '(#("end" 0 3 (face font-lock-keyword-face fontified t)) "/Users/wat-aro/work/fjord/ruby/case_converter/README.md" "# =>" "/Users/wat-aro/work/fjord/ruby/case_converter/lib/case_converter/extention/string.rb" "/Users/wat-aro/work/fjord/ruby/case_converter/lib/case_converter/version.rb" "/Users/wat-aro/work/ruby/i18n_to_snakecase/" "camel_to_sna" "/Users/wat-aro/work/fjord/ruby/case_converter/.gitignore" #("
" 0 1 (fontified t)) "/Users/wat-aro/work/ruby/test" "/Users/wat-aro/work/fjord/ruby/case_converter/spec/extention/string_spec.rb" "com/wat-aro/case_converter" "/Users/wat-aro/work/fjord/ruby/case_converter/" "/Users/wat-aro/work/fjord/ruby/case_converter/case_converter.gemspec" #("1" 0 1 (face font-lock-string-face fontified t)) "spec" "/Users/wat-aro/work/fjord/ruby/case_converter/lib/case_converter.rb" #("camel_case" 0 10 (font-lock-face (:foreground "red3" :background "#110B14" :inverse-video nil) fontified t)) #("snake_to_camel" 0 14 (fontified t)) "/Users/wat-aro/work/fjord/ruby/case_converter/spec/" #("spec_helper" 0 11 (fontified t)) "/Users/wat-aro/work/fjord/ruby/case_converter/spec/case_converter_spec.rb" "/Users/wat-aro/work/fjord/ruby/case_converter/spec/spec_helper.rb" "/Users/wat-aro/work/fjord/ruby/case_converter/Gemfile" #("source" 0 6 (fontified t)) #("tempfile" 0 8 (face font-lock-string-face fontified t)) #("def" 0 3 (face font-lock-keyword-face fontified t)) "/Users/wat-aro/work/fjord/ruby/convert.rb" "/Users/wat-aro/work/ruby/i18n_to_snakecase/exchange.rb" "/Users/wat-aro/work/fjord/ruby/test.rb" #("CC" 0 2 (face font-lock-type-face fontified t)) "/Users/wat-aro/work/fjord/ruby/rake/Rakefile" "/Users/wat-aro/work/fjord/ruby/rake/print_reverse.c" "/Users/wat-aro/work/c/head-first-c/" "/Users/wat-aro/work/c/head-first-c/adress.c" "/Users/wat-aro/work/ruby/RubyGems-Guides-for-Japanese/site.rb" "/Users/wat-aro/work/ruby/RubyGems-Guides-for-Japanese/vendor/bundle/gems/sinatra-1.3.2/Rakefile" "/Users/wat-aro/work/ruby/RubyGems-Guides-for-Japanese/" "/Users/wat-aro/work/rails/book_admin/Gemfile" "/Users/wat-aro/work/ruby/foo.rb" "/Users/wat-aro/work/ruby/fib.rb" "/Users/wat-aro/work/fjord/mysql/mysql-ipa.org" "org" "データの検索g" #("*" 0 1 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil fontified t)) #("select" 0 6 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) "/Users/wat-aro/.emacs.d/init.el" "mysqld" #("restart" 0 7 (fontified t)) "/Users/wat-aro/work/fjord/mysql/commands.sql" "/Users/wat-aro/work/fjord/mysql/mysql-dotinstall.org" "/Users/wat-aro/work/fjord/ssl.org" "Interval" "/etc/ssh" "/Users/wat-aro/dotfiles/.bashrc" "article" "\\_<relative\\_> " "relative" "before" "/Users/wat-aro/project/fjord/kowabana/app/views/stories/_form.html.slim" "/Users/wat-aro/project/fjord/kowabana/app/views/wallpapers/_form.html.slim" "/Users/wat-aro/work/ruby/i18n_to_snakecase/test/" "/Users/wat-aro/work/ruby/i18n_to_snakecase/test/_content_comment.html.slim" "article block" "main-he" #("article__sub-sub-title" 0 22 (part-side css)) "ap" "main-header" "header__title" "header" "ページタイトル" "/Users/wat-aro/wat-aro.github.io/csstutorial/practice/index.html" "cs" "/Users/wat-aro/wat-aro.github.io/csstutorial/practice/stylesheets/" "sicp" "/Users/wat-aro/work/c/head-first-c/rest" "/Users/wat-aro/work/c/head-first-c/elvi" "/Users/wat-aro/work/c/head-first-c/ali" "/Users/wat-aro/work/c/head-first-c/categorize.c" "c" "/Users/wat-aro/work/c/head-first-c/c.org" "/Users/wat-aro/work/c/head-first-c/bermuda.c" "/Users/wat-aro/work/slide/sicp-script.org" "/Users/wat-aro/work/slide/sicp-script" #("リモートブランチをリセットすると、他の人が困るgi" 0 25 (fontified t)) #("indent" 0 6 (face org-meta-line font-lock-fontified t fontified t)) "/Users/wat-aro/work/slide/sicp.org" "/Users/wat-aro/work/fjord/git/learn-git-branching.org" "/Users/wat-aro/work/fjord/css/flexbox-froggy.org" "~/Documents/junk/2016-0305-164457.org" "/Users/wat-aro/work/ruby/i18n_to_snakecase/Gemfile" "/Users/wat-aro/work/rails/book_admin/.gitignore" "/Users/wat-aro/work/ruby/i18n_to_snakecase/xmptmp-in60650k4D.rb" "/Users/wat-aro/work/ruby/test.rb" "/Users/wat-aro/.emacs.d/elisp/rcodetools.el" "/Users/wat-aro/work/ruby/i18n_to_snakecase/test1/_form.html.slim" "/Users/wat-aro/work/ruby/i18n_to_snakecase/test1/_wallpaper_stories.html.slim" "/Users/wat-aro/work/ruby/i18n_to_snakecase/test1/nest/_wallpaper.html.slim" #("to_s" 0 4 (fontified t)) #("div" 0 3 (fontified t)) "/Users/wat-aro/work/ruby/i18n_to_snakecase/test1/_content_comment.html.slim" #("do" 0 2 (fontified t)) "/Users/wat-aro/work/ruby/i18n_to_snakecase/test/_form.html.slim" "story_note" #("comment.user.name" 0 17 (fontified t)) "pry" #(".content-comment" 0 16 (fontified t)) "/Users/wat-aro/project/fjord/kowabana/public/humans.txt" "/Users/wat-aro/work/ruby/i18n_to_snakecase/test1.txt" "ruby-end" #("fuzzy" 0 5 (button (t) category default-button face link follow-link t package-desc [cl-struct-package-desc fuzzy (0 1) "Fuzzy Matching" nil single "marmalade" nil nil nil] action package-menu-describe-package tabulated-list-column-name "Package" tabulated-list-id [cl-struct-package-desc fuzzy (0 1) "Fuzzy Matching" nil single "marmalade" nil nil nil] tabulated-list-entry [("fuzzy" face link follow-link t package-desc [cl-struct-package-desc fuzzy (0 1) "Fuzzy Matching" nil single "marmalade" nil nil nil] action package-menu-describe-package) #("0.1" 0 3 (font-lock-face default)) #("available" 0 9 (font-lock-face default)) #("marmalade" 0 9 (font-lock-face default)) #("Fuzzy Matching" 0 14 (font-lock-face default))])) "auto-complete" #(".wallpaper-stories.js-tabs__content" 0 35 (fontified t)) #("t" 0 1 (fontified t face font-lock-string-face)) "/Users/wat-aro/work/ruby/i18n_to_snakecase/_global_nav.html.slim" "/Users/wat-aro/work/ruby/i18n_to_snakecase/_wallpaper_stories.html.slim" #("gsub" 0 4 (fontified t)) "/Users/wat-aro/work/ruby/i18n_to_snakecase/_form.html.slim" "smart-ne" "/Users/wat-aro/.pryrc" "/Users/wat-aro/work/rails/book_admin/app/controllers/application_controller.rb" "/Users/wat-aro/.emacs.d/elpa/rbenv-0.0.3/rbenv.el" "`" "ruby-mode-hook" "rbenv	" "/Users/wat-aro/.emacs.d/elpa/rbenv-20141119.2349/rbenv.el" "smart-newline" "deep-indent" "/Users/wat-aro/.emacs.d/elpa/ruby-block-20131210.1931/ruby-block.el" "ruby-block" "/Users/wat-aro/.emacs.d/elisp/ruby-block/ruby-block.el" "/Users/wat-aro/.emacs.d/elisp/gauche-mode.elc" "ruby-ele" #("**" 0 1 (fontified t face org-hide line-prefix #("*" 0 1 (face org-hide)) wrap-prefix #("    " 0 4 (face org-indent))) 1 2 (fontified t face org-level-2 line-prefix #("*" 0 1 (face org-hide)) wrap-prefix #("    " 0 4 (face org-indent)))) "/Users/wat-aro/work/fjord/css/f" "blockquote" "/Users/wat-aro/wat-aro.github.io/csstutorial/practice/stylesheets/application.css" "/Users/wat-aro/work/rails/book_admin/vendor/bundle/gems/activerecord-4.1.1/lib/active_record/associations/has_many_association.rb" "/Users/wat-aro/work/rails/book_admin/vendor/bundle/gems/activesupport-4.1.1/lib/active_support/values/time_zone.rb" "/Users/wat-aro/work/rails/book_admin/Gemfile.lock" "record" "74" "/Users/wat-aro/work/rails/foo.rb" #(":book_authors" 0 13 (fontified t face font-lock-constant-face)) #("has_many" 0 8 (fontified t)) #(":author" 0 7 (fontified t face font-lock-constant-face)) #("class" 0 5 (fontified t face font-lock-keyword-face)) #("create_table" 0 12 (fontified t)) "/Users/wat-aro/work/rails/book_admin/db/migrate/" "/Users/wat-aro/work/rails/book_admin/db/migrate/20160302135619_add_publisher_id_to_books.rb" "autho" #("belongs_to" 0 10 (fontified t)) #(":books" 0 6 (fontified t face font-lock-constant-face)) "/Users/wat-aro/work/rails/book_admin/app/models/book_author.rb" "author" #("container" 0 9 (tag-attr t tag-name "div" tag-type start font-lock-face web-mode-html-attr-value-face)) #("justify-content" 0 8 (part-side css) 8 15 (part-side css)) "/Users/wat-aro/work/rails/book_admin/app/models/author.rb" "/Users/wat-aro/work/rails/book_admin/app/models/book.rb" "/Users/wat-aro/work/rails/book_admin/app/models/publisher.rb" #("中間モデル" 0 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) #(":" 0 1 (fontified t)) "/Users/wat-aro/work/rails/book_admin/db/migrate/20160302134241_drop_table.rb" "/Users/wat-aro/work/rails/book_admin/db/migrate/20160302131824_create_book_authors.rb" "/Users/wat-aro/work/rails/book_admin/db/migrate/20160302125824_add_publisher_id_to_books.rb" "/Users/wat-aro/work/rails/perfect_ruby_on_rails.org" "/Users/wat-aro/work/fjord/ruby/class.org" "/Users/wat-aro/work/fjord/linux/command.org" "~/Documents/junk/2016-0302-181228.sh" "/Users/wat-aro/project/fjord/kowabana/app/views/wallpapers/_wallpaper.html.slim" "~/Documents/junk/2016-0302-121052.org" "/Users/wat-aro/work/ruby/rails/book_admin/db/migrate/20160301141350_create_books.rb" "/Users/wat-aro/work/ruby/rails/book_admin/app/models/book.rb" "/Users/wat-aro/work/ruby/rails/book_admin/vendor/bundle/gems/activesupport-4.1.1/lib/active_support/values/time_zone.rb" "/Users/wat-aro/work/ruby/rails/book_admin/Gemfile" "/Users/wat-aro/work/ruby/rails/todo/Gemfile" "/Users/wat-aro/work/ruby/rails/todo/config/routes.rb" "/Users/wat-aro/work/ruby/rails/todo/db/migrate/20160301114753_create_tasks.rb" #("sqlite3" 0 7 (face font-lock-comment-face fontified t)) "/Users/wat-aro/work/ruby/rails/perfect_ruby_on_rails.org" "/Users/wat-aro/work/ruby/rails/todo/mfile" "==" "/Users/wat-aro/work/ruby/rails/todo/README.rdoc" "/Users/wat-aro/project/fjord/kowabana/config/routes.rb" "/Users/wat-aro/project/fjord/kowabana/config/i18n-js.yml" "~/Documents/junk/2016-0301-142716.org" "/Users/wat-aro/project/fjord/kowabana/Gemfile" "/Users/wat-aro/project/fjord/kowabana/db/schema.rb" "/Users/wat-aro/project/fjord/kowabana/config/google.example.p12" "/Users/wat-aro/project/fjord/kowabana/config/database.ci.yml" "/Users/wat-aro/project/fjord/kowabana/config/database.yml" "/Users/wat-aro/work/ruby/rails_test/Gemfile" "/Users/wat-aro/.mysql_history" "/Users/wat-aro/.bundle/config" "/Users/wat-aro/project/fjord/kowabana/README.md" "/Users/wat-aro/project/fjord/kowabana/.gitignore" "/Users/wat-aro/work/scheme/search/test.html" "/Users/wat-aro/work/scheme/Gauche-html-parser-0.2/configur" "/Users/wat-aro/work/scheme/Gauche-html-parser-0.2/Makefile.in" "/Users/wat-aro/work/scheme/Gauche-html-parser-0.2/" #("../" 0 3 (face font-lock-string-face fontified t)) #("value" 0 5 (face font-lock-comment-face fontified t)) "/Users/wat-aro/work/scheme/Gauche-html-parser-0.2/text/" #("raw" 0 3 (fontified t)) "/Users/wat-aro/work/ruby/google-search/lib/google-search/search/base.rb" "/Users/wat-aro/work/ruby/google-search/lib/google-search.rb" "/Users/wat-aro/work/scheme/search/search.scm" "inf-ruby" "/Users/wat-aro/work/ruby/crawl/blog/OCamlの無名関数は再帰を定義できない？ - (wat-aro).html" "/Users/wat-aro/work/ruby/crawl/blog/test.html" "/Users/wat-aro/work/ruby/crawl/test.rb" "/Users/wat-aro/work/ruby/crawl/Gemfile" "/Users/wat-aro/work/ruby/crawl/search.rb" #("text" 0 4 (part-side css part-token comment font-lock-face web-mode-css-comment-face)) "/Users/wat-aro/work/fjord/css/application.css" #("4px" 0 3 (part-side css)) "order-list" "midasi" #("text-decoration" 0 15 (part-side css face web-mode-css-property-name-face)) "\\_<border-radius\\_> " #("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 10 (face org-indent)))) "otoiawase" #("border-style" 0 12 (part-side css part-token comment font-lock-face web-mode-css-comment-face)) "border" #("AAA" 0 3 (part-side css face (:background "#AAA" :foreground "black"))) #("flex-f" 0 6 (part-side css)) "\\_<font-weight\\_> " "local-nav" #("global-nav" 0 10 (part-side css face web-mode-css-selector-face)) "top-ads" #("space-between" 0 13 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 10 (face org-indent)))) #("a" 0 1 (part-side css face web-mode-css-selector-face)) #("font-color" 0 5 (part-side css face web-mode-css-property-name-face) 5 10 (part-side css face web-mode-css-property-name-face)) "center" #("normal" 0 6 (part-side css part-token comment font-lock-face web-mode-css-comment-face)) #("padding-top" 0 11 (part-side css part-token comment font-lock-face web-mode-css-comment-face)) #("ddd" 0 3 (part-side css part-token comment font-lock-face web-mode-css-comment-face)) "/Users/wat-aro/work/fjord/css/dotinstall/default.css" "サイトタイトル" "/Users/wat-aro/work/fjord/css/csstutorial/practice/stylesheets/application.css" "/Users/wat-aro/work/fjord/css/csstutorial/practice/index.html" "/Users/wat-aro/work/fjord/dotinstall/css/" "/Users/wat-aro/work/fjord/dotinstall/css/test.erb" "/Users/wat-aro/work/fjord/dotinstall/css/index.html" "865" "/Users/wat-aro/.emacs.d/ini" "/Users/wat-aro/.emacs.d/elpa/web-mode-20160212.538/" "comment css" "\\_<web-mode-comment-style\\_> " "comment" "/Users/wat-aro/.emacs.d/elpa/web-mode-20160212.538/web-mode.el" "/Users/wat-aro/work/c/head-first-c/outpu" "/Users/wat-aro/work/c/head-first-c/output" "63965" "/Users/wat-aro/work/c/head-first-c/csv" "086182" "/Users/wat-aro/work/c/head-first-c/gpsdata.csv" "/Users/wat-aro/work/c/head-first-c/geo2json.c" "/Users/wat-aro/work/c/head-first-c/json.c" "/Users/wat-aro/work/fjord/dotinstall/css/default.css" "/Users/wat-aro/work/fjord/e7e25db29e8a433a040e/gistfile1.txt" #("<tr>" 0 1 (tag-name "tr" tag-type start tag-beg 16 font-lock-face web-mode-html-tag-bracket-face invisible nil) 1 3 (tag-name "tr" tag-type start font-lock-face web-mode-html-tag-face invisible nil) 3 4 (tag-name "tr" tag-type start tag-end t font-lock-face web-mode-html-tag-bracket-face invisible nil)) "/Users/wat-aro/work/fjord/e7e25db29e8a433a040e/" "/Users/wat-aro/work/fjord/e7e25db29e8a433a040e/gistfile1.html" "/Users/wat-aro/work/fjord/dotinstall/html/" "/Users/wat-aro/work/fjord/dotinstall/html/17.html" "/Users/wat-aro/work/dotinstall/html/24.html" "/Users/wat-aro/work/dotinstall/html/23.html" "/Users/wat-aro/work/dotinstall/html/17.html" "/Users/wat-aro/work/dotinstall/html/15.html" "/Users/wat-aro/work/dotinstall/html/more.html" "/Users/wat-aro/work/dotinstall/html/14.html" "/Users/wat-aro/work/dotinstall/html/13.html" "/Users/wat-aro/work/dotinstall/html/12.html" #("p" 0 1 (font-lock-face web-mode-html-tag-face tag-name "p" tag-type start)) "/Users/wat-aro/work/dotinstall/html/11.html" "/Users/wat-aro/work/dotinstall/html/09.html" "/Users/wat-aro/work/dotinstall/html/08.html" "07" #("skyblue" 0 7 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) "%" "/Users/wat-aro/work/dotinstall/html/07.html" "/Users/wat-aro/work/dotinstall/html/mystyles.css" "/Users/wat-aro/work/dotinstall/html/06.html" "/Users/wat-aro/work/dotinstall/html/05.html" "/Users/wat-aro/work/dotinstall/html/04.html" "web-mode" "/Users/wat-aro/work/dotinstall/html/" "/Users/wat-aro/work/dotinstall/html/foo.html" "/Users/wat-aro/work/dotinstall/html/test.html" "/Users/wat-aro/work/c/head-first-c/print_reverse.c" "/Users/wat-aro/work/c/head-first-c/text_search.c" "/Users/wat-aro/work/c/head-first-c/jukebox.c" "/Users/wat-aro/work/c/head-first-c/monte.c" "/Users/wat-aro/work/c/head-first-c/mote.c" "/Users/wat-aro/work/c/head-first-c/cards" "/Users/wat-aro/work/c/head-first-c/name.c" "/Users/wat-aro/dotfiles/.bash_profile" "/Users/wat-aro/.bashrc" "/Users/wat-aro/work/shell/hello" "~/Documents/junk/2016-0223-192620.org" "/Users/wat-aro/work/c/head-first-c/go_south_east.c" "/Users/wat-aro/work/c/head-first-c/count.c" "/Users/wat-aro/work/c/head-first-c/cards.c" "/Users/wat-aro/work/c/head-first-c/card.c" #("lastpair" 0 8 (fontified t face font-lock-string-face)) "/Users/wat-aro/work/scheme/programing-gauche/my-" "/Users/wat-aro/work/scheme/programing-gauche/mycode.scm" "/Users/wat-aro/work/c/kr/chapter2/bit.c" "/Users/wat-aro/work/c/kr/chapter2/" "/Users/wat-aro/work/c/kr/chapter2/strcat.c" "/Users/wat-aro/work/c/kr/chapter2/squeez.c" "/Users/wat-aro/work/c/kr/chapter2/rand.c" "/Users/wat-aro/work/c/kr/chpter2/rand.c" "/Users/wat-aro/work/c/kr/chapter1/max_line.c" "getchar" "/Users/wat-aro/work/c/kr/chapter1/max-line.c" "/Users/wat-aro/work/c/kr/chapter1/power.c" "/Users/wat-aro/work/c/kr/chapter1/array.c" "/Users/wat-aro/work/c/kr/chapter1/word.c" "/Users/wat-aro/work/c/kr/chapter1/wc.c" "/Users/wat-aro/work/c/kr/chapter1/1.10.c" "/Users/wat-aro/work/c/kr/chapter1/backspace.c" "/Users/wat-aro/work/c/kr/chapter1/1-9.c" "/Users/wat-aro/work/c/kr/chapter1/" "/Users/wat-aro/work/c/kr/chapter1/space.c" "/Users/wat-aro/work/c/kr/chapter1/count-line.c" "/Users/wat-aro/work/c/kr/chapter1/count.c" "printf" "193" "/usr/include/stdio.h" "/Users/wat-aro/work/c/kr/chapter1/eof.c" "/Users/wat-aro/work/c/kr/chapter1/io.c" "/Users/wat-aro/work/c/kr/chapter1/for.c" "/Users/wat-aro/work/c/kr/chapter1/temperature.c" "/Users/wat-aro/work/c/kr/chapter1/hello.c" "/Users/wat-aro/work/c/kr/hello.c" "/Users/wat-aro/work/c/kr/chapter1.c" "/Users/wat-aro/work/c/chapter1.c" "\\_<exchange\\_> " "exchange" "19" #("val" 0 3 (face tuareg-font-lock-governing-face fontified t)) "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/heap" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/heap.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/heap.mli" "/Users/wat-aro/work/ocaml/programming_fundamentals/fib_array.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/gensym.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/make" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/mli" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/main" "metro" "main" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/metro.mli" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/" #("OCAMLMAKEFILE" 0 13 (face (font-lock-variable-name-face) fontified t)) "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/Makefile" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/main.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/rb_metro_network.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/fac/Makefile" "/Users/wat-aro/work/ocaml/programming_fundamentals/fac/main.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/fac/fac.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/sieve" #("type" 0 4 (face tuareg-font-lock-governing-face fontified t)) "/Users/wat-aro/work/ocaml/programming_fundamentals/set/set.mli" "/Users/wat-aro/work/ocaml/programming_fundamentals/set/set.ml" "167" "\\_<romaji_to_kanji\\_> " "warning" "389" "181" #("let" 0 3 (face tuareg-font-lock-governing-face fontified t)) "145" "87" "insert_ekikan" "~/Documents/junk/2016-0218-203146." "~/Documents/junk/2016-0218-203130." "~/Documents/junk/2016-0218-203127." "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/redBlack.mli" "assoc_test2" "search" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/redBlack/" "Not_found" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/redBlack/redBlack.ml" "infinity" "insert" #("tree" 0 4 (face font-lock-type-face fontified t)) "\\_<insert_ekikan\\_> " "\\_<inserts_ekikan\\_> " "138" "assoc_test" "57" "\\_<exception\\_> " "exception" "110" "82" "\\_<Empty\\_> " "\\_<ekikan_tree_t\\_> " #("ekikan_tree_t" 0 13 (face font-lock-type-face fontified t)) "144" "/Users/wat-aro/work/ocaml/programming_fundamentals/tree" "66" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/met" "ekikan_t" #("romaji" 0 6 (fontified t)) "mli" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/redBlack/redblack.mli" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/redBlack/redblack.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/" "67" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/rb_tree/make" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro/rb_tree/tree.ml" #("SOURCES" 0 7 (face font-lock-variable-name-face fontified t)) "rb_tree_t" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro" "/Users/wat-aro/work/ocaml/programming_fundamentals/redBlack/" "/Users/wat-aro/work/ocaml/programming_fundamentals/rb_metro_network.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/excep" "/Users/wat-aro/work/ocaml/programming_fundamentals/ex me" "/Users/wat-aro/work/ocaml/programming_fundamentals/redBlack/redBlack.mli" "/Users/wat-aro/work/ocaml/programming_fundamentals/redBlack.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/rb_tree.ml" #("Empty" 0 5 (fontified t)) "/Users/wat-aro/work/ocaml/programming_fundamentals/red_black_tree.ml" #("with" 0 4 (fontified t face font-lock-keyword-face)) "get_ekikan_kyori" "/Users/wat-aro/work/ocaml/programming_fundamentals/module_metro_network.ml" #("module" 0 6 (fontified t face tuareg-font-lock-governing-face)) "/Users/wat-aro/work/ocaml/programming_fundamentals/tree/" "/Users/wat-aro/work/ocaml/programming_fundamentals/tree/mli" "/Users/wat-aro/work/ocaml/programming_fundamentals/tree/tree.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/tree/Makefile" "/Users/wat-aro/work/ocaml/programming_fundamentals/tree.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/tree.mli" "/Users/wat-aro/work/ocaml/programming_fundamentals/tree_module.ml" "kyori_wo" "romaji_to" "koushin" "get_ekikan" "279" "/Users/wat-aro/work/ocaml/programming_fundamentals/exception_metro_network.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/assoc.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/count_urikire_yasai.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/person" "/Users/wat-aro/work/ocaml/programming_fundamentals/first_A.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/mini" #("rest" 0 4 (fontified t)) "/Users/wat-aro/work/ocaml/programming_fundamentals/minimum.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/10" "saitan wo bunri" "359" "157" "\\_<get_ekikan_kyori\\_> " "ekikan" "\\_<koushin\\_> " "\\_<dijkstra_main\\_> " "\\_<inserts" "kyori_wo_hyoji" "/Users/wat-aro/work/ocaml/programming_fundamentals/tree_metro_network.ml" "net" "/Users/wat-aro/work/ocaml/programming_fundamentals/ekikan_tree_t.ml" "sum_tree" "/Users/wat-aro/work/ocaml/programming_fundamentals/tree_t.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/nenrei.ml" "comple" "/Users/wat-aro/work/scheme/SICP/" "complete" "/Users/wat-aro/work/ocaml/programming_fundamentals/nenrei" "merlin-ac-source" "/Users/wat-aro/.emacs.d/elpa/merlin-20151228.734/merlin-ac.el" #("kyori" 0 5 (fontified t)) "dijkstra fun" "dijkstra" "/Users/wat-aro/work/ocaml/programming_fundamentals/net" "c-c c-t" "\\_<ac-source-scheme\\_> " "/Users/wat-aro/.emacs.d/elpa/merlin-20151228.734/" "tuareg" "\\_<scheme-program-name\\_> " "scheme-pro" "merlin-error" #("merlin-mode" 0 11 (fontified t)) #("merlin-mode-map" 0 15 (face font-lock-variable-name-face fontified t)) "mode-map" #("merlin-type-enclosing-map" 0 25 (face font-lock-variable-name-face fontified t)) "key" #(":keymap" 0 7 (face font-lock-builtin-face fontified t)) "keymap" "/Users/wat-aro/.emacs.d/elpa/merlin-20151228.734/merlin.el" "\\_<define-key\\_> " "term-raw-map" "merlin-ac" #("m" 0 1 (fontified t)) "gauche" "merlin" "\\_<seiretsu\\_> " "\\_<make_initial_eki_list\\_> " "santan" "initial" "saitan" "saitan_wo" #("init" 0 4 (fontified t)) "/Users/wat-aro/work/ocaml/programming_fundamentals/fold_left.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/sum_list.ml" "sairan" "minimum_saitan_wo" "/Users/wat-aro/work/ocaml/programming_fundamentals/sieve.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/erathosthenes.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/gcd.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/quick_sort.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/fac.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/one_to_n.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/14.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/con" "make_eki_list" "shokika" "eki_list" "make_eki" "/Users/wat-aro/work/ocaml/programming_fundamentals/ex14.9.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/ex14.8.ml" "hyoji" "eki_t" #("gosh>" 0 5 (front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t field output inhibit-line-move-field-capture t font-lock-face comint-highlight-prompt fontified t)) "/Users/wat-aro/work/scheme/yconbinator.scm" "koushin1" "/Users/wat-aro/work/ocaml/programming_fundamentals/count.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/concat.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/even.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/kyori" "/Users/wat-aro/work/ocaml/programming_fundamentals/seire" "/Users/wat-aro/work/ocaml/programming_fundamentals/shokika" "/Users/wat-aro/work/ocaml/programming_fundamentals/eki_" "/Users/wat-aro/work/ocaml/programming_fundamentals/kyori hyo" "/Users/wat-aro/work/ocaml/programming_fundamentals/get_ekikan_kyo" "/Users/wat-aro/work/ocaml/programming_fundamentals/metro_network.ml" "kasumigaseki" "me" "/Users/wat-aro/work/ocaml/programming_fundamentals/eki" "/Users/wat-aro/work/ocaml/programming_fundamentals/koushin1.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/compose.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/ex13.3.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/person_namae.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/8" "/Users/wat-aro/work/ocaml/programming_fundamentals/count_ketsueki.ml" "\\_<大手町\\_> " "ootema" #("ekimei" 0 6 (face font-lock-comment-face fontified t)) "/Users/wat-aro/work/ocaml/programming_fundamentals/seiretsu.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/ins_sort.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/shokika.ml" #("namae" 0 5 (fontified t)) "eki" "/Users/wat-aro/work/ocaml/programming_fundamentals/make_eki_list.ml" "/Users/wat-aro/work/ocaml/programming_fundamentals/eki_t.ml" "/Users/wat-aro/work/ocaml/sum_of_square.ml" "/Users/wat-aro/work/ocaml/fac.ml" "/Users/wat-aro/work/ocaml/get" "/Users/wat-aro/work/ocaml/kyori" "roma" #("global_ekimei_list" 0 18 (fontified t)) #("hibiya" 0 6 (face font-lock-string-face fontified t)) #("霞ヶ関" 0 3 (face font-lock-string-face fontified t)) #("kyori_wo_" 0 9 (fontified t)) "/Users/wat-aro/work/ocaml/kyori_wo_hyoji.ml" "kinten" "/Users/wat-aro/work/ocaml/get_ekikan_kyori.ml" "/Users/wat-aro/work/ocaml/metro" "/Users/wat-aro/work/ocaml/romaji_to_kanji.ml" "/Users/wat-aro/work/ocaml/equal_length.ml" "letrec" "/Users/wat-aro/work/scheme/SICP/eval" "/Users/wat-aro/work/ocaml/merge.ml" "/Users/wat-aro/work/ocaml/append.ml" "~/Documents/junk/2016-0213-121440.org" "/Users/wat-aro/work/ocaml/ex10.7.ml" "/Users/wat-aro/work/ocaml/" "ocaml" "10" #("は" 0 1 (face font-lock-comment-face fontified t)) "/Users/wat-aro/work/ocaml/9.9" "/Users/wat-aro/work/ocaml/9.7" "/Users/wat-aro/work/ocaml/7" "/Users/wat-aro/work/ocaml/person_t.ml" "/Users/wat-aro/work/ocaml/ex10.3.ml" "/Users/wat-aro/work/ocaml/ex10.1.ml" "/Users/wat-aro/work/ocaml/add_to_each.ml" "/Users/wat-aro/work/ocaml/metr" "/Users/wat-aro/work/ocaml/met" "/Users/wat-aro/work/ocaml/ex9.9.ml" "/Users/wat-aro/work/ocaml/ex9.8.ml" "/Users/wat-aro/work/ocaml/ex9.7.ml" "/Users/wat-aro/work/ocaml/8.5.ml" "/Users/wat-aro/work/ocaml/sum.ml" "/Users/wat-aro/work/ocaml/contein_zero.ml" "/Users/wat-aro/work/scheme/SICP/49" "map" "scan-out" "49" "\\_<scan-out-defines\\_> " "scan-out-defines" "scan-out-define" "scan-out-" "50" "/Users/wat-aro/work/scheme/SICP/50" "eval" #("bodys" 0 5 (fontified t)) "\\_<named-let->define\\_> " "\\_<let->combination\\_> " "let->com" #("文面アドレスを使って変数の値を探す" 0 17 (face font-lock-comment-face fontified t)) "unassign" "/Users/wat-aro/work/scheme/SICP/map-test.scm" "com" #("define" 0 6 (fontified t face font-lock-keyword-face)) "compile-seq" "/Users/wat-aro/work/scheme/SICP/compiler.scm" "def-list" "\\_<compile-definition\\_> " "define-variable" "let->combination" "compile-lambda-body" #("var" 0 3 (fontified t)) #("exp" 0 3 (fontified t)) "\\_<lexical-address-lookup\\_> " "lookup" "let->combi" "compile" "\\_<compile-variable\\_> " "\\_<lexical-address-set!" "\\_<find-variable\\_> " "compile-de" "compile-as" #("ここ" 0 1 (field output inhibit-line-move-field-capture t fontified t rear-nonsticky (inhibit-line-move-field-capture field) front-sticky (inhibit-line-move-field-capture field) face font-lock-comment-face) 1 2 (field output inhibit-line-move-field-capture t fontified t rear-nonsticky (inhibit-line-move-field-capture field) front-sticky (inhibit-line-move-field-capture field) face font-lock-comment-face)) "\\_<entry65\\_> " "address" "compile-ass" "tracing" "/Users/wat-aro/work/scheme/SICP/register-machine-simulator.scm" "objects" "/Users/wat-aro/work/scheme/SICP/5.50" "/Users/wat-aro/work/scheme/IP" #("the-empty-environment" 0 21 (fontified t)) "\\_<the-global-environment\\_> " "\\_<the-global-environent\\_> " "global" "unboud" "the-global" #("MC-Eval" 0 7 (fontified t face font-lock-string-face)) "m-eval" "Unassi" "\\_<operator\\_> " "preserving" #("set!" 0 4 (fontified t)) "make-stack" "/Users/wat-aro/work/scheme/SICP/regi" "\\_<instruction-execution-proc\\_> " "tracing-flag" "/Users/wat-aro/work/scheme/SICP/register" #("env" 0 3 (fontified t)) "\\_<compile-procedure-call\\_> " "\\_<compile-proc-appl\\_> " "compile-proc-appl" "primitive-procedure" "primitive-procedure?" "lexical" "\\_<construct-arglist\\_> " "arglist" #("kimuraさんの血液型はAB型です" 0 18 (fontified t face font-lock-string-face)) #("駅のデータ" 0 5 (fontified t face font-lock-comment-face)) "/Users/wat-aro/work/ocaml/ex8.ml" "/Users/wat-aro/work/ocaml/7.1.ml" "/Users/wat-aro/work/ocaml/ex5.4.ml" "/Users/wat-aro/work/ocaml/5.6.ml" "/Users/wat-aro/work/ocaml/5." "/Users/wat-aro/work/ocaml/5.2.ml" "/Users/wat-aro/work/ocaml/abs_value.ml" "/Users/wat-aro/work/ocaml/5.3.ml" "/Users/wat-aro/work/ocaml/kyu" "/Users/wat-aro/work/ocaml/4.7" "/Users/wat-aro/work/ocaml/4.8.ml" #("x" 0 1 (fontified t)) "/Users/wat-aro/work/ocaml/4.7.ml" "/Users/wat-aro/work/ocaml/4.6.ml" "/Users/wat-aro/work/ocaml/tsuru_no_ashi.ml" "/Users/wat-aro/work/ocaml/kyuyo.ml" "List" "/Users/wat-aro/work/ocaml/first.ml" "/Users/wat-aro/work/scheme/27-9.scm" "smartparen" "/Users/wat-aro/.ocamlinit" #("define-variable!" 0 16 (face font-lock-function-name-face fontified t)) "define-vari" "/Users/wat-aro/work/scheme/SICP/eval.scm" "compile-definition" "get-global" "get-global-en" #("get-global-environment" 0 22 (fontified t)) "/Users/wat-aro/work/scheme/SICP/5.5" "/Users/wat-aro/work/scheme/SICP/5" "/Users/wat-aro/work/scheme/SICP/compi" "\\_<compile-lambda-body\\_> " "\\_<compile\\_> " "\\_<open-code?\\_> " "\\_<compile-and-go\\_> " "compiled-branch" "compile " "\\_<append-instruction-sequences\\_> " "append-instruction-sequences" "append-" "876" #("after-call25" 0 12 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) "after-call" "after-lambda" "make-compiled-procedure" "\\_<not-overwrite?\\_> " "open-code?" "\\_<compound-proc-appl\\_> " #("after-call21" 0 12 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) "assign target" "assign argl" #("setup-environment-with-compile" 0 30 (fontified t)) #("compiled-branch23" 0 17 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) "construct" "application" "\\_<compile-application\\_> " "\\_<all-regs\\_> " "\\_<after-call25\\_> " #("after-call54" 0 12 (fontified t inhibit-line-move-field-capture t rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) "call25" "\\_<primitive-branch6\\_> " "\\_<compiled-branch23\\_> " "\\_<primitive-branch18\\_> " "\\_<false-branch4\\_> " "primitive" "\\_<primitive-branch2561\\_> " "\\_<false-branch2547\\_> " "\\_<primitive-branch2549\\_> " "/Users/wat-aro/work/scheme/SICP/map-instruction.scm" "reg proc" "object" "primitive-procedures" "216" "primitive-procedure-obje" "\\_<extend-environment\\_> " "/Users/wat-aro/work/scheme/SICP/48" "48" "/Users/wat-aro/work/scheme/SICP/5.48" "/Users/wat-aro/work/scheme/SICP/5.49" "\\_<setup-environment\\_> " #("time" 0 4 (fontified t)) "extend" "/Users/wat-aro/work/scheme/SICP/549" "/Users/wat-aro/work/scheme/SICP/5.50.scm" #("eceval-procedure" 0 16 (face font-lock-function-name-face fontified t)) "ec" #("ASSEMBLE" 0 8 (face font-lock-string-face fontified t)) "print-" #("print-statistics" 0 16 (fontified t)) "\\_<print-statistics\\_> " "regi" "print-stack" "/Users/wat-aro/work/scheme/SICP/ece" "/Users/wat-aro/work/scheme/SICP/eceval" "\\_<print-result\\_> " #("statements" 0 10 (face font-lock-function-name-face fontified t)) "\\_<assemble\\_> " "assemble" #("list" 0 4 (fontified t)) #("print-stack-statistics" 0 22 (fontified t)) "/Users/wat-aro/work/scheme/SICP/ec" #("ev-appl-did-operator" 0 20 (fontified t inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture))) "/Users/wat-aro/work/scheme/SICP/5.49.scm" #("primitive-apply" 0 15 (fontified t)) "/Users/wat-aro/work/scheme/SICP/eceval.scm" "/Users/wat-aro/work/scheme/SICP/5.5.7" "start-" #("5.4.1-5.4.4までの注釈でかかれていた手続き" 0 26 (fontified t face font-lock-comment-face)) #("compiledと同じようにcompound-proc-applで命令を作る" 0 38 (fontified t face font-lock-comment-face)) "/Users/wat-aro/work/scheme/SICP/5.48.scm" "make-instruction-sequences" "/Users/wat-aro/work/scheme/SICP/5.47" "compiled-pro" "\\_<parallel-instruction-sequences\\_> " "compile-procedure-call" "/Users/wat-aro/work/scheme/SICP/5.47.scm" "\\_<ev-sequence\\_> " "compound" "/Users/wat-aro/work/scheme/SICP/5.44" "fib" "/Users/wat-aro/work/scheme/SICP/5.1" "\\_<make-register\\_> " "\\_<allocate-register\\_> " "\\_<lookup-register\\_> " "\\_<get-register\\_> " "set-register-" "set-register-contents" "unassaigned" "gosh -i" "set-regist" "\\_<set-contents!" "235" "\\_<make-test\\_> " "condition-proc" "\\_<make-new-machine\\_> " "execute" "stack" "\\_<preserving\\_> " #("expression" 0 10 (face font-lock-string-face fontified t)) "\\_<false-branch235\\_> " "\\_<after-lambda233\\_> " "/Users/wat-aro/work/scheme/SICP/work.scm" "compile-vari" "lambda-body" "lexical-a" "\\_<address\\_> " "lex-add" "list-ref" "value-proc" #("set-register-contents!" 0 22 (fontified t)) "compiled-procedure-entry" "compiled-procedure" "external" "apply-dispa" #("true" 0 4 (face font-lock-function-name-face fontified t)) "/Users/wat-aro/work/scheme/SICP/5.5.7.scm" "apply-dispatch" "/Users/wat-aro/work/scheme/SICP/44" "/Users/wat-aro/work/scheme/SICP/5.44.scm" "/Users/wat-aro/work/scheme/SICP/5.4.4" "\\_<entry60\\_> " "\\_<after-call64\\_> " "\\_<continue\\_> " "\\_<after-lambda61\\_> " "\\_<after-lambda59\\_> " "\\_<after-lambda57\\_> " "\\_<compile-sequence\\_> " "operand-cods" "compile-lambda" "/Users/wat-aro/work/scheme/SICP/5.43.scm" "/Users/wat-aro/work/scheme/SICP/5.42" "target" "ct-enc" "open-code" "/Users/wat-aro/work/scheme/SICP/5.38d.scm" "/Users/wat-aro/work/scheme/SICP/5.38" "/Users/wat-aro/work/scheme/SICP/38" "\\_<compile-open-code\\_> " "\\_<compile-lambda\\_> " "\\_<ct-env\\_> " "ct-env" "compile-application" "/Users/wat-aro/work/scheme/SICP/42" "/Users/wat-aro/work/scheme/SICP/5.42.scm" "variable" "/Users/wat-aro/work/scheme/SICP/5.41.scm" "\\_<compile-if\\_> " "/Users/wat-aro/work/scheme/SICP/5.40.scm" "extend-en" "env-count" "/Users/wat-aro/work/scheme/SICP/5.5.6.scm" "\\_<proc\\_> " "\\_<compile-open-code-operand-2\\_> " "/Users/wat-aro/work/scheme/SICP/5.38-fac.scm" #("entry1" 0 6 (front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t inhibit-line-move-field-capture t fontified t)) "/Users/wat-aro/work/scheme/SICP/5.38opencode.scm" "\\_<end-with-linkage\\_> " "\\_<compile-self-evaluating\\_> " "preservin" "\\_<make-instruction-sequence\\_> " "\\_<tack-on-instruction-sequence\\_> " "177" "/Users/wat-aro/work/scheme/SICP/5.38.scm" #("restoreは使用されない" 0 1 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 1 2 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 2 3 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 3 4 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 4 5 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 5 6 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 6 7 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 7 8 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 8 9 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 9 10 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 10 11 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 11 12 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 12 13 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t) 13 14 (face font-lock-comment-face front-sticky (inhibit-line-move-field-capture) rear-nonsticky (inhibit-line-move-field-capture) fontified t inhibit-line-move-field-capture t)) "/Users/wat-aro/work/scheme/SICP/5.37.scm" "\\_<statements\\_> " "servi" "/Users/wat-aro/work/scheme/SICP/5.5.scm" "/Users/wat-aro/work/scheme/SICP/5.36" "/Users/wat-aro/work/scheme/SICP/5.35.scm" "33" "\\_<primitive-branch28\\_> " "\\_<primitive-branch31\\_> " "continue" "compiled-procedure-env" "\\_<after-lambda21\\_> " "make-compiled proce" "\\_<compiled-procedure?\\_> " "make-compiled" "\\_<after-lambda19\\_> " "/Users/wat-aro/work/scheme/SICP/5.34.scm" "reverse" "\\_<primitive-branch12\\_> " "32" "/Users/wat-aro/work/scheme/SICP/d" "dif" "b" "/Users/wat-aro/work/scheme/SICP/5.33dif.txt" "/Users/wat-aro/work/scheme/SICP/5.33b.scm" "/Users/wat-aro/work/scheme/SICP/5.33a.scm" "\\_<after-lambda114\\_> " "restore" "\\_<after-lambda97\\_> " "make-inst" "tack-on-" "end-with-linkage" "modirie" "compile-li" "end-with-li" "compile-variable" "make-instru" "definition-va" "assignment-variable" "/Users/wat-aro/work/scheme/SICP/5.31.scm" "symbol" "no-ope" #("operands" 0 7 (fontified t) 7 8 (rear-nonsticky t fontified t)) "\\_<apply-dispatch\\_> " "symbol-args" "/Users/wat-aro/work/scheme/SICP/5.32.scm" "\\_<quoted?\\_> " "/Users/wat-aro/work/scheme/SICP/5.30b" "error\\?" "definition-err" "\\_<primitive-procedure-objects\\_> " "\\_<primitive-procedures\\_> " "/Users/wat-aro/work/scheme/SICP/5.30.scm" "/Users/wat-aro/work/scheme/SICP/5.30a.scm" "definition" "\\_<definition-error?\\_> " "\\_<ev-assignment\\_> " "\\_<let-error?\\_> " "\\_<if-error?\\_> " "lambda-error" "/Users/wat-aro/work/scheme/SICP/5.30" "lookup-" "\\_<ev-variable\\_> " "ev-seq" "/Users/wat-aro/work/scheme/SICP/5.4.4." "/Users/wat-aro/work/scheme/SICP/5.28.scm" #("force-it" 0 8 (front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t field output inhibit-line-move-field-capture t fontified t)) #("actual-value" 0 12 (fontified t front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t field output inhibit-line-move-field-capture t)) "~/Documents/junk/2016-0203-031651.scm" "foo" "~/Documents/junk/2016-0203-030526.org" "save" "\\_<actual-value\\_> " "~/Documents/junk/2016-0203-015809.scm" "ev-eva" "\\_<set-evaluated-thunk\\_> " "evaluated" #("proceed-machine" 0 15 (fontified t face font-lock-function-name-face)) "proceed" "operator" "\\_<primitive-procedure?\\_> " "get-register-co" "get-register" #("compound-procedure?" 0 19 (fontified t)) "\\_<ev-if\\_> " "actual" "\\_<ev-appl-did-operands\\_> " "~/Documents/junk/2016-0202-200941.org" "ev-appl-accum" #("null?" 0 5 (fontified t)) "register" "\\_<value-proc\\_> " "ev-appl-did-operands" "ev-appl-did" "/Users/wat-aro/work/scheme/SICP/regis" "\\_<adjoin-arg\\_> " "ev-appl" "set-cdr" "set-evaluate" "\\_<apply-primitive-procedure\\_> " "apply-primi" "ev-thunk" "delay-appl" "delay-did" "actual-values" "\\_<primitive-apply\\_> " "thunk-env" "resotre" "ev-sequence" "sequence" "eval-" "\\_<compound-apply\\_> " "\\_<ev-application\\_> " "\\_<ev-definition\\_> " "and->if" "\\_<cond->if\\_> " "\\_<eval-and\\_> " "and-if" "\\_<self-evaluating?\\_> " "/Users/wat-aro/work/scheme/SICP/5.25.scm" "assing" "/Users/wat-aro/work/scheme/SICP/5.24.scm" "update" "compound-procedure\\?" #("compound-apply" 0 14 (fontified t)) "primitive-pro" #("text-of-quotation" 0 17 (fontified t)) "text-of" "lookup-prim" #("ev-self-eval" 0 12 (fontified t)) "ev-self" #("operation-exp-op" 0 16 (fontified t)) "\\_<lookup-prim\\_> " "ev-self-" "\\_<let->lambda\\_> " "/Users/wat-aro/work/scheme/SICP/5.4.4.scm" "cond" #("procedure" 0 9 (fontified t)) "\\_<ev-appl-did-operator\\_> " "/Users/wat-aro/work/scheme/SICP/5.4.scm" "/Users/wat-aro/work/scheme/SICP/register-machine-simulater.scm" "make-new-ma" "make-register" "make-machine" "update-insts!" "\\_<make-execution-procedure\\_> " "/Users/wat-aro/work/scheme/SICP/register-simulater.scm" "append" "broken" "reg-new" "\\_<relocate-continue\\_> " "\\_<update-car\\_> " "action-proc" #("car-loop" 0 8 (fontified t)) "/Users/wat-aro/work/scheme/SICP/5.3.scm" "\\_<tracing-label\\_> " "new-machine" "flatland-th" "unass" "make-new-machine" "make-goto" "make-executi" "\\_<goto-dest\\_> " "make-assign" "label-exp?" "\\_<label-exp?\\_> " "\\_<set-instruction-execution-proc!\\_> " "update-ins" "extract" "\\_<execute\\_> " "\\_<make-goto\\_> " "advance" "/Users/wat-aro/work/scheme/SICP/5.2ex-2.scm" "coninue" "continu" "fact-done" "/Users/wat-aro/work/scheme/SICP/5.2" "5.2" "\\_<make-stack\\_> " "571" "/Users/wat-aro/work/scheme/SICP/5.2-ex.scm" "set-register" "set-contents" "flatland" "\\_<sort-reg\\_> " "result" "\\_<install-label-registers\\_> " "get-label-re" "saved-regs" "add-reg" "labe-registe" "sources" "\\_<add-reg-source\\_> " "labels" "\\_<make-machine\\_> " "assign" "install" "\\_<update-insts!" "\\_<make-assign\\_> " "\\_<operation-exp-operands\\_> " "\\_<make-primitive-exp\\_> " "make-primitive" "make-operation" "unknown" "338" "\\_<pop\\_> " "\\_<instruction-text\\_> " "\\_<for-each\\_> " "for-each" "sourdes" "type-insts" "reg-sources" "add-label-reg" "saed-re" "reg-labels" "make-new-" "\\_<make-instruction\\_> " "type-table" "set-register-conten" "tagged-list" "\\_<make-restore\\_> " "execu" "\\_<initialize\\_> " "\\_<make-save\\_> " #("全文は以下の通りになる．" 0 12 (fontified t)) "fib-done" "\\_<make-label-entry\\_> " "\\_<install-instruction-sequence\\_> " "\\_<lookup-label\\_> " "label-exp-label" "\\_<advance-pc\\_> " "get-register-contents" "\\_<assign-value-exp\\_> " "\\_<make-operation-exp\\_> " "\\_<get-contents\\_> " "make-assi" "\\_<get-register-contents\\_> " "\\_<assign-reg-name\\_> " "set-contents!" "\\_<machine\\_> " "machines" "\\_<set-contents\\_> " "387" "158" "357" "tagged" "\\_<operation-exp?\\_> " "185" "make-execution" "get-regster" "208" "update-insts" "\\_<dispatch\\_> " "/Users/wat-aro/work/scheme/SICP/5.2.scm" "paredit" #("make-execution-procedure" 0 24 (face font-lock-function-name-face fontified t)) "smartpa" "/Users/wat-aro/work/commonlisp/script.lisp" "/Users/wat-aro/work/commonlisp/script.cl" "/Users/wat-aro/work/scheme/SICP/5.1.scm" "\\_<first-conjunct\\_> " "\\_<pattern-match\\_> " "\\_<check-an-assertion\\_> " "\\_<find-assertions\\_> " "simple-qu" "conjoin" "extend-frame" "\\_<binding-in-frame\\_> " "consistent" "apply-a-rul" "\\_<unify-match\\_> " "singleton" "unify-match" "\\_<conclusion\\_> " "unify" "tree-walk" "\\_<apply-rules\\_> " "\\_<simple-query\\_> " "\\_<qeval\\_> " "/Users/wat-aro/work/scheme/SICP/4.4.4" "/Users/wat-aro/work/scheme/SICP/4.4.4-ex.scm" "\\_<contents\\_> " "\\_<stream-append-delayed\\_> " "\\_<stream-flatmap\\_> " "\\_<negated-query\\_> " "disjoin" "and" "negate" "simple-que" "stream-flatmap" "find-assertions" "flatten" "simple-" "\\_<contract-question-mark\\_> " "contract" "\\_<current-assertion-stream\\_> " "\\_<depends-on?\\_> " "\\_<fetch-assertions\\_> " "\\_<rename-variables-in\\_> " "make-new-va" "\\_<make-new-variable\\_> " "\\_<new-rule-application-id\\_> " "\\_<store-rule-in-index\\_> " "\\_<apply-a-rule\\_> " "\\_<fetch-rules\\_> " "\\_<get-indexed-rules\\_> " "\\_<use-index?\\_> " "\\_<constant-symbol?\\_> " "interleave-delay" "\\_<singleton-stream\\_> " "stream-append" #("auto-save-file-name-transforms" 0 30 (fontified t)) "\\_<get-all-assertions\\_> " "\\_<get-indexed-assertions\\_> " "use-index" "counter" "unbound" "\\_<binding-value\\_> " "simple-query" "find-asse" "\\_<get-stream\\_> " "consta" #("?something" 0 10 (fontified t)) "/Users/wat-aro/work/scheme/SICP/4.4.3" "/Users/wat-aro/work/scheme/SICP/4.4." "can-do" #("assert!" 0 7 (fontified t)) "/Users/wat-aro/work/scheme/SICP/4.4.4.scm" "\\_<instantiate\\_> " "\\_<make-binding\\_> " "apply-rules" "mark" "constract" "system" "apply-rule" "constents" "\\_<var?\\_> " "372" "binding-in-frame" "\\_<get\\_> " "'rule-stream" "binding-valu" "\\_<index-key-of\\_> " "\\_<indexable?\\_> " "add-rule!" "add-rule-or-assertion!" "\\_<add-assertion-body\\_> " "\\_<assertion-to-be-added?\\_> " "\\_<map-over-symbols\\_> " "\\_<query-syntax-process\\_> " "/Users/wat-aro/work/scheme/" "/Users/wat-aro/work/scheme/fib-cc.scm" "pairs" "/Users/wat-aro/work/scheme/SICP/stream" "gt-stre" "stre" "\\_<current-rule-stream\\_> " "stream" "current" "\\_<store-assertion-in-index\\_> " "252" "index-" #("contents" 0 8 (fontified t)) "add" "assert" "add-assertion-body" "prompt-for" "/Users/wat-aro/work/scheme/SICP/4.1" "4.4.1" "the-empty" "sicp.scm" "/Users/wat-aro/work/scheme/SICP/stream.scm" "stream-car" "stream-cons" "\\_<the-empty-stream\\_> " "the-empty-stream" "165" "\\_<extend\\_> " "\\_<extend-if-consistent\\_> " "put" "/Users/wat-aro/work/scheme/SICP/3.5.scm" "make-table" "\\_<rule-body\\_> " "memo-proc" "stream-map" "orange" "/Users/wat-aro/.emacs.d/elpa/clues-theme-20140922.2056/" "foreground" "/Users/wat-aro/.emacs.d/elpa/clues-theme-20140922.2056/clues-theme.el" "sp" "/Users/wat-aro/.emacs.d/elisp/emacs-clues-theme/README.md" "assertin" "/Users/wat-aro/work/scheme/SICP/4.4.3.scm" "/Users/wat-aro/work/scheme/SICP/4.4.2.scm" "lives-n" "/Users/wat-aro/work/scheme/SICP/4.4.1.scm" "/Users/wat-aro/work/scheme/SICP/4.3.3.scm" "/Users/wat-aro/work/scheme/SICP/4.3.3" "\\_<analyze\\_> " "require" "an-ele" "\\_<fail2\\_> " "assignment" "startin" "\\_<parse-prepositional-phrase\\_> " "\\_<parse-verb-phrase\\_> " "\\_<an-element-of\\_> " "\\_<parse-word\\_> " "\\_<parse-article-phrase\\_> " "\\_<parse-simple-noun-phrase\\_> " "\\_<parse-noun-phrase\\_> " "\\_<parse-sentence\\_> " "\\_<parse\\_> " #("lookup-variable-value" 0 21 (fontified t)) "lookup-varia" "scan-ou" "\\_<assignment-value\\_> " "/Users/wat-aro/.emacs.d/elisp/gauche-mode.el" "driver" "prompt" "scheme-com" "scheme-mode-hook" "unassigned" "\\_<maybe-extend\\_> " "analyze-ass" #("fail" 0 4 (fontified t)) #("father-list" 0 11 (fontified t)) #("parse-noun-phrase" 0 17 (fontified t)) "analyze-am" "analyze" "definition-variable" "\\_<definition-variable\\_> " "definition-value" "scheme" "make-pro" "\\_<text-of-quotation\\_> " "lambda" "markup" "time-stamp-end" "scheme-mode" "gauche-mode" "eldoc-mode" "make-local-variable" "auto-co" "/Users/wat-aro/.emacs.d/elpa/auto-complete-20151211.227/" "/Users/wat-aro/.emacs.d/elpa/auto-complete-20151211.227/auto-complete.el" "auto-com" "\\_<limited_port_data\\_> " "1664" "/usr/local/Cellar/gauche/Gauche/src/port.c" "/Users/wat-aro/.emacs.d/ac-comphist.dat" "/Users/wat-aro/.emacs.d/" "/Users/wat-aro/.emacs.d/elpa/slime-20151213.1142/dir" "/Users/wat-aro/.emacs.d/elpa/slime-20151213.1142/ChangeLog" "/usr/local/Cellar/swank-gauche-master/" "/usr/local/Cellar/swank-gauche-master/swank-gauche.el" "/usr/local/Cellar/swank-gauche-master/README" "/usr/local/Cellar/swank-gauche-master/swank-gauche.scm" "/Users/wat-aro/.emacs.d/elisp/swank-gauche.el" "/usr/local/Cellar/swank-gauche-master/dot.emacs" "parse input" "distinct" "/Users/wat-aro/work/scheme/atcoder/" "/Users/wat-aro/work/scheme/atcoder/0109/" "/Users/wat-aro/work/scheme/atcoder/welcom-to-atcoder.scm" "/Users/wat-aro/work/scheme/atcoder/0109/a.scm" "/Users/wat-aro/work/scheme/SICP/4.3.1.scm" "\\_<compound-procedure?\\_> " "\\_<eval-quote\\_> " "\\_<match-to\\_> " "match-to" "\\_<list-lambda?\\_> " "\\_<list-lambda\\_> " "\\_<make-list-procedure\\_> " "list-lambda" "lazy-cons" "make-procedure" "\\_<lambda?\\_> " "\\_<make-procedure\\_> " "lazy-con" "make-cons" "make-list" "/Users/wat-aro/work/scheme/apply.scm" "compound-procedure" "/Users/wat-aro/work/scheme/SICP/4.34.scm" "\\_<make-lambda\\_> " "quote" "make-lambda" "combina" "\\_<def-body-list\\_> " "~/Documents/junk/2016-0109-124542.org" "/Users/wat-aro/work/scheme/SICP/4.2.3.scm" "\\_<procedure-parameters\\_> " "procedure-para" "thunk-value" "list-of-args" "list-of" "list-of-arg" "/Users/wat-aro/work/scheme/SICP/4.31.scm" "set-variable-value!" "\\_<eval-assignment\\_> " "\\_<list-of-arg-values\\_> " "eval-sequ" "\\_<lambda-parameters\\_> " "eval-if" "let->lambda" "\\_<force-it\\_> " "/Users/wat-aro/work/scheme/my-app.scm" "\\_<eval-definition\\_> " "\\_<definition-value\\_> " "arguents" "argunts" "/Users/wat-aro/work/scheme/SICP/4.2.scm" "setup-envi" "environ" "setup-environment" "global-en" "setup-env" "primitive-procedure-name" "primitive-procedure-names" "/Users/wat-aro/work/scheme/SICP/analyze-eval.scm" "Quit" "/Users/wat-aro/work/scheme/define-curry.scm" "make-if" "analyze-if" "\\_<expand-clauses\\_> " "sequenc" "\\_<analyze-sequence\\_> " #("eval-sequence" 0 13 (fontified t face font-lock-function-name-face)) "4.1" "make-proce" "proc-body" "pproc" "let\\?" #("my-apply" 0 8 (fontified t face font-lock-function-name-face)) "make-let" "make-frame" "519" "delay" "cons-stream" "integral" "\\_<stream-map\\_> " "globarih" "self-e" "dainyuu" "unbound variable" "lambda-" "false" "\\_<if-predicate\\_> " "\\_<eval-if\\_> " "\\_<first-operand\\_> " "\\_<operands\\_> " "\\_<eval-sequence\\_> " "\\_<procedure-body\\_> " "add-binding-to-frame!" "\\_<if-alternative\\_> " "if-conse" "eval-definition" "make-begin" #("expand-and-clause" 0 17 (fontified t face font-lock-function-name-face)) "expand-and" "/Users/wat-aro/work/scheme/SICP/4.1b.scm" "the-glo" "set-vari" "compound-pro" "apply" "lambda?" "/Users/wat-aro/work/scheme/SICP/4.1.scm" "unknowon procedure type" "/Users/wat-aro/work/scheme/ac/practice.scm" "\\_<assignment?\\_> " "unbound va" "list-of-value" "procedure-body" "first-exp" "\\_<first-exp\\_> " "definiti" "let-body" "\\_<lambda-body\\_> " "eval-se" "defini" "\\_<definition?\\_> " "eval-defi" "compound-" "'primitive" "primitive-proce" "apply-in-under" "env-loop" "frame-variables" "variab" "'procedure" "\\_<last-exp?\\_> " "(eval exp env)" "if-predicate" "\\_<make-frame\\_> " "list-of-values" "first-operand" "first-ope" "valiable" "define-varia" "sch" "intera" "~/Documents/junk/2015-1221-194427.scm" "first-frame" "add-bin" "~/Documents/junk/2015-1220-210258.org" "/Users/wat-aro/work/scheme/tls.scm" "~/Documents/junk/2015-1219-223348.org" "/Users/wat-aro/work/commonlisp/debug.lisp" "\\_<named-let-var\\_> " "cond-action" "expand" "cond-predicate" "else-clause" "cond->" "last exp" "cond->if" "begin-ac" "sequen" "/Users/wat-aro/work/scheme/SICP/3.3.scm" "/Users/wat-aro/Documents/junk/2015-1217-203434.org" "/Users/wat-aro/.emacs.d/elpa/smartparens-20151213.1507/" "~/Documents/junk/2015-1217-203434.org" "add-to-list" "/Users/wat-aro/.emacs.d/elpa/smartparens-20151213.1507/smartparens-config.el" "/Users/wat-aro/.emacs.d/elpa/smart" "random-init" "/Users/wat-aro/work/scheme/SICP/3.1.scm" "rc" "integrand" "/Users/wat-aro/work/commonlisp/practical-common-lisp/03.lisp" "\\_<require\\_> " "/Users/wat-aro/work/site/static/schedule/" "ace-i" "/Users/wat-aro/work/scheme/SICP/3.5" "/Users/wat-aro/work/commonlisp/practical-common-lisp/" "03" "popwin" "/Users/wat-aro/work/scheme/SICP/3.4.scm" "/Users/wat-aro/work/scheme/SICP/1.3.scm" "1.1" "/Users/wat-aro/.emacs.d/elpa/helm-swoop-20151022.1750/helm-swoop-autoloads.el" "/Users/wat-aro/.emacs.d/elpa/helm-swoop-20151022.1750/helm-swoop-pkg.el" "/Users/wat-aro/.emacs.d/elpa/helm-swoop-20151022.1750/helm-swoop.el" "/Users/wat-aro/work/scheme/SICP/1.1.scm" "gau" "/Users/wat-aro/.emacs.d/elisp/" "pa" "cmigemo"))
(setq file-name-history '("~/dotfiles/install2.sh" "~/.emacs.d/init.el" "~/dotfiles/install.sh" "~/dotfiles/Rakefile" "~/work/fjord/ruby/case_converter/README.md" "~/work/fjord/ruby/case_converter/lib/case_converter/extention/string.rb" "~/work/fjord/ruby/case_converter/lib/case_converter/version.rb" "~/work/fjord/ruby/case_converter/.gitignore" "~/work/ruby/test.rb" "~/work/fjord/ruby/case_converter/spec/extention/string_spec.rb" "~/work/fjord/ruby/case_converter/case_converter.gemspec" "~/work/fjord/ruby/case_converter/lib/case_converter.rb" "~/work/fjord/ruby/case_converter/spec/case_converter_spec.rb" "~/work/fjord/ruby/case_converter/spec/spec_helper.rb" "~/work/fjord/ruby/case_converter/Gemfile" "~/work/ruby/i18n_to_snakecase/exchange.rb" "~/work/c/head-first-c/print_reverse.c" "~/work/c/head-first-c/monte.c" "~/work/c/head-first-c/adress.c" "~/work/ruby/RubyGems-Guides-for-Japanese/site.rb" "~/work/ruby/RubyGems-Guides-for-Japanese/vendor/bundle/gems/sinatra-1.3.2/Rakefile" "~/work/ruby/RubyGems-Guides-for-Japanese/Gemfile" "~/work/rails/book_admin/Gemfile" "~/work/ruby/foo.rb" "~/work/ruby/fib.rb" "~/work/fjord/mysql/mysql-ipa.org" "~/work/fjord/mysql/mysql-dotinstall.org" "/etc/ssh_config" "~/dotfiles/.bashrc" "~/project/fjord/kowabana/app/views/stories/_form.html.slim" "~/project/fjord/kowabana/app/views/wallpapers/_form.html.slim" "~/work/ruby/i18n_to_snakecase/test/_form.html.slim" "~/work/ruby/i18n_to_snakecase/test/_content_comment.html.slim" "~/wat-aro.github.io/csstutorial/practice/index.html" "~/wat-aro.github.io/csstutorial/practice/stylesheets/application.css" "~/work/slide/sicp.org" "~/work/c/head-first-c/the_rest.csv" "~/work/c/head-first-c/elvises.csv" "~/work/c/head-first-c/aliens.csv" "~/work/rails/perfect_ruby_on_rails.org" "~/work/fjord/git/learn-git-branching.org" "~/work/fjord/css/flexbox-froggy.org" "~/work/ruby/i18n_to_snakecase/Gemfile" "~/work/rails/book_admin/.gitignore" "~/work/ruby/i18n_to_snakecase/.gitignore" "~/work/ruby/i18n_to_snakecase/xmptmp-out60650xCK.rb" "~/work/ruby/i18n_to_snakecase/xmptmp-in60650k4D.rb" "~/.emacs.d/elisp/rcodetools.el" "~/work/ruby/i18n_to_snakecase/test1/_form.html.slim" "~/work/ruby/i18n_to_snakecase/test1/_wallpaper_stories.html.slim" "~/work/ruby/i18n_to_snakecase/test1/nest/_wallpaper.html.slim" "~/work/ruby/i18n_to_snakecase/test1/_content_comment.html.slim" "~/project/fjord/kowabana/public/humans.txt" "~/work/ruby/i18n_to_snakecase/_wallpaper_stories.html.slim" "~/work/ruby/i18n_to_snakecase/_global_nav.html.slim" "~/work/ruby/i18n_to_snakecase/_form.html.slim" "~/work/rails/book_admin/app/controllers/application_controller.rb" "~/.emacs.d/elpa/rbenv-0.0.3/rbenv.el" "~/.emacs.d/elpa/rbenv-20141119.2349/rbenv.el" "~/.emacs.d/elpa/ruby-block-20131210.1931/ruby-block.el" "~/.emacs.d/elisp/ruby-block/ruby-block.el" "~/.emacs.d/elisp/gauche-mode.elc" "~/work/rails/book_admin/vendor/bundle/gems/activerecord-4.1.1/lib/active_record/associations/has_many_association.rb" "~/work/rails/book_admin/vendor/bundle/gems/activesupport-4.1.1/lib/active_support/values/time_zone.rb" "~/work/rails/book_admin/Gemfile.lock" "~/work/rails/book_admin/db/migrate/20160302135934_create_book_authors.rb" "~/work/rails/book_admin/db/migrate/20160302135619_add_publisher_id_to_books.rb" "~/work/rails/book_admin/app/models/book_author.rb" "~/work/rails/book_admin/app/models/author.rb" "~/work/rails/book_admin/app/models/book.rb" "~/work/rails/book_admin/app/models/publisher.rb" "~/work/rails/book_admin/db/migrate/20160302134241_drop_table.rb" "~/work/rails/book_admin/db/migrate/20160302131824_create_book_authors.rb" "~/work/rails/book_admin/db/migrate/20160302125824_add_publisher_id_to_books.rb" "~/work/fjord/ruby/class.org" "~/work/fjord/linux/command.org" "~/project/fjord/kowabana/app/views/wallpapers/_wallpaper.html.slim" "~/work/ruby/rails/book_admin/db/migrate/20160301141350_create_books.rb" "~/work/ruby/rails/book_admin/app/models/book.rb" "~/work/ruby/rails/book_admin/vendor/bundle/gems/activesupport-4.1.1/lib/active_support/values/time_zone.rb" "~/work/ruby/rails/book_admin/Gemfile" "~/work/ruby/rails/todo/Gemfile" "~/work/ruby/rails/todo/config/routes.rb" "~/work/ruby/rails/todo/db/migrate/20160301114753_create_tasks.rb" "~/work/ruby/rails/todo/README.rdoc" "~/project/fjord/kowabana/config/routes.rb" "~/project/fjord/kowabana/config/i18n-js.yml" "~/project/fjord/kowabana/Gemfile" "~/project/fjord/kowabana/db/schema.rb" "~/project/fjord/kowabana/config/google.example.p12" "~/project/fjord/kowabana/config/database.ci.yml" "~/project/fjord/kowabana/config/database.yml" "~/work/ruby/rails_test/Gemfile" "~/.mysql_history" "~/.bundle/config" "~/project/fjord/kowabana/README.md" "~/project/fjord/kowabana/.gitignore" "~/work/scheme/Gauche-html-parser-0.2/configure" "~/work/scheme/Gauche-html-parser-0.2/Makefile.in" "~/work/scheme/Gauche-html-parser-0.2/VERSION" "~/work/scheme/Gauche-html-parser-0.2/text/html-parse.scm" "~/work/ruby/google-search/lib/google-search/search/base.rb" "~/work/ruby/google-search/lib/google-search.rb" "~/work/ruby/crawl/blog/OCamlの無名関数は再帰を定義できない？ - (wat-aro).html" "~/work/ruby/crawl/blog/test.html" "~/work/ruby/crawl/Gemfile" "~/work/fjord/css/dotinstall/default.css" "~/work/fjord/css/csstutorial/practice/stylesheets/application.css" "~/work/fjord/css/csstutorial/practice/index.html" "~/work/fjord/dotinstall/css/default.css" "~/work/fjord/dotinstall/css/index.html" "~/.emacs.d/elpa/web-mode-20160212.538/web-mode-autoloads.el" "~/.emacs.d/elpa/web-mode-20160212.538/web-mode-pkg.el" "~/.emacs.d/elpa/web-mode-20160212.538/web-mode.el" "~/work/c/head-first-c/output.json" "~/work/c/head-first-c/gpsdata.csv" "~/work/fjord/e7e25db29e8a433a040e/gistfile1.txt" "~/work/fjord/e7e25db29e8a433a040e/gistfile1.html" "~/work/fjord/dotinstall/html/15.html" "~/work/fjord/dotinstall/html/14.html" "~/work/fjord/dotinstall/html/13.html" "~/work/fjord/dotinstall/html/12.html" "~/work/fjord/dotinstall/html/11.html" "~/work/fjord/dotinstall/html/09.html" "~/work/fjord/dotinstall/html/08.html" "~/work/fjord/dotinstall/html/07.html" "~/work/fjord/dotinstall/html/06.html" "~/work/fjord/dotinstall/html/05.html" "~/work/fjord/dotinstall/html/04.html" "~/work/fjord/dotinstall/html/17.html" "~/work/dotinstall/html/09.html" "~/work/dotinstall/html/07.html" "~/work/dotinstall/html/04.html" "~/work/c/head-first-c/cards.c" "~/dotfiles/.bash_profile" "~/.bashrc" "~/work/shell/hello" "~/work/scheme/programing-gauche/mycode-test.scm" "~/work/scheme/programing-gauche/mycode.scm" "~/work/c/kr/chapter2/squeez.c" "~/work/c/kr/chapter1/1.10.c" "~/work/c/kr/chapter1/io.c" "~/work/c/kr/chapter1/for.c" "/usr/include/stdio.h" "~/work/c/kr/chapter1/hello.c" "~/work/ocaml/programming_fundamentals/metro/heap.ml" "~/work/ocaml/programming_fundamentals/metro/Makefile" "~/work/ocaml/programming_fundamentals/metro/redBlack.mli" "~/work/ocaml/programming_fundamentals/metro/main.ml" "~/work/ocaml/programming_fundamentals/metro/metro.mli" "~/work/ocaml/programming_fundamentals/metro/metro.ml" "~/work/ocaml/programming_fundamentals/metro/OCamlMakefile" "~/work/ocaml/programming_fundamentals/metro/rb_metro_network.ml" "~/work/ocaml/programming_fundamentals/fac/Makefile" "~/work/ocaml/programming_fundamentals/sieve.ml" "~/work/ocaml/programming_fundamentals/metro/redBlack/redBlack.ml" "~/work/ocaml/programming_fundamentals/metro/redBlack/redBlack.mli" "~/work/ocaml/programming_fundamentals/tree_metro_network.ml" "~/work/ocaml/programming_fundamentals/metro/redBlack/redblack.mli" "~/work/ocaml/programming_fundamentals/metro/redBlack/redblack.ml" "~/work/ocaml/programming_fundamentals/metro/redBlack/redBlack.top" "~/work/ocaml/programming_fundamentals/metro/redBlack/redBlack.cmo" "~/work/ocaml/programming_fundamentals/metro/redBlack/redBlack.cmi" "~/work/ocaml/programming_fundamentals/metro/redBlack/Makefile" "~/work/ocaml/programming_fundamentals/metro/rb_tree/Makefile" "~/work/ocaml/programming_fundamentals/metro/rb_tree/tree.ml" "~/work/ocaml/programming_fundamentals/rb_metro_network.ml" "~/work/ocaml/programming_fundamentals/redBlack/Makefile" "~/work/ocaml/programming_fundamentals/exception_metro_network.ml" "~/work/ocaml/programming_fundamentals/redBlack/redBlack.ml" "~/work/ocaml/programming_fundamentals/module_metro_network.ml" "~/work/ocaml/programming_fundamentals/red_black_tree.ml" "~/work/ocaml/programming_fundamentals/tree/tree.cmi" "~/work/ocaml/programming_fundamentals/tree/tree.mli" "~/work/ocaml/programming_fundamentals/tree/tree.ml" "~/work/ocaml/programming_fundamentals/person_namae.ml" "~/work/ocaml/programming_fundamentals/person_t.ml" "~/work/ocaml/programming_fundamentals/ex10.3.ml" "~/work/ocaml/programming_fundamentals/ex10.1.ml" "~/work/ocaml/programming_fundamentals/metro_network.ml" "~/work/ocaml/programming_fundamentals/nenrei.ml" "~/work/scheme/SICP/5.50.scm" "~/.emacs.d/elpa/merlin-20151228.734/merlin-ac.el" "~/.emacs.d/elpa/merlin-20151228.734/merlin.el" "~/work/ocaml/programming_fundamentals/metro.ml" "~/work/ocaml/programming_fundamentals/fac.ml" "~/work/ocaml/programming_fundamentals/ex14.8.ml" "~/work/ocaml/programming_fundamentals/concat.ml" "~/work/ocaml/programming_fundamentals/ex8.ml" "~/work/ocaml/programming_fundamentals/ex9.9.ml" "~/work/ocaml/programming_fundamentals/ex9.7.ml" "~/work/ocaml/programming_fundamentals/kyori_wo_hyoji.ml" "~/work/ocaml/programming_fundamentals/seiretsu.ml" "~/work/ocaml/programming_fundamentals/shokika.ml" "~/work/ocaml/programming_fundamentals/make_eki_list.ml" "~/work/ocaml/programming_fundamentals/eki_t.ml" "~/work/ocaml/programming_fundamentals/get_ekikan_kyori.ml" "~/work/ocaml/programming_fundamentals/romaji_to_kanji.ml" "~/work/ocaml/programming_fundamentals/8.5.ml" "~/work/ocaml/metro.ml" "~/work/ocaml/get_ekikan_kyori.ml" "~/work/ocaml/kyori_wo_hyoji.ml" "~/work/scheme/SICP/eval.scm" "~/work/ocaml/ex8.ml" "~/work/ocaml/sum.ml" "~/work/ocaml/tsuru_no_ashi.ml" "~/work/ocaml/person_t.ml" "~/work/ocaml/ex9.9.ml" "~/work/ocaml/ex9.7.ml" "~/work/ocaml/7.1.ml" "~/work/ocaml/4.7.ml" "~/work/ocaml/5.3.ml" "~/work/ocaml/5.2.ml" "~/work/ocaml/4.8.ml" "~/work/ocaml/4.6.ml" "~/work/ocaml/ex10.3.ml" "~/work/ocaml/ex5.4.ml" "~/work/ocaml/ex10.1.ml" "~/work/ocaml/abs_value.ml" "~/work/ocaml/8.5.ml" "~/work/scheme/SICP/5.49.scm" "~/work/scheme/SICP/map-test.scm" "~/work/scheme/SICP/compiler.scm" "~/work/scheme/SICP/register-machine-simulator.scm" "~/work/ocaml/first.ml" "~/work/ocaml/kyuyo.ml" "~/work/scheme/27-9.scm" "~/.ocamlinit" "~/work/scheme/SICP/5.5.6.scm" "~/work/scheme/SICP/5.5.7.scm" "~/work/scheme/SICP/map-instruction.scm" "~/work/scheme/SICP/5.48.scm" "~/work/scheme/SICP/eceval.scm" "~/work/scheme/SICP/5.47.scm" "~/work/scheme/SICP/5.44.scm" "~/work/scheme/SICP/5.1.scm" "~/work/scheme/SICP/.#.#5.44.scm" "~/work/scheme/SICP/.#5.44.scm" "~/work/scheme/SICP/5.4.4.scm" "~/work/scheme/SICP/wat-aro@mac.local.455" "~/work/scheme/SICP/5.4.scm" "~/work/scheme/SICP/5.42.scm" "~/work/scheme/SICP/5.38d.scm" "~/work/scheme/SICP/5.38opencode.scm" "~/work/scheme/SICP/5.40.scm" "~/work/scheme/SICP/5.38-fac.scm" "~/work/scheme/SICP/5.38.scm" "~/work/scheme/SICP/5.5.scm" "~/work/scheme/SICP/5.35.scm" "~/work/scheme/SICP/5.33a.scm" "~/work/scheme/SICP/5.33diff.txt" "~/work/scheme/SICP/5.33dif.txt" "~/work/scheme/SICP/5.32.scm" "~/work/scheme/SICP/5.30b" "~/work/scheme/SICP/5.25.scm" "~/work/scheme/SICP/5.30" "~/work/scheme/SICP/5.30a.scm" "~/work/scheme/SICP/4.2.scm" "~/work/scheme/SICP/4.1.scm" "~/work/scheme/SICP/4.1b.scm" "~/work/scheme/SICP/5.3.scm" "~/work/scheme/SICP/register-simulater.scm" "~/work/scheme/SICP/5.2.scm" "~/work/scheme/SICP/5.2-ex.scm" "~/work/scheme/SICP/4.4.4-ex.scm" "~/work/scheme/SICP/4.4.4.scm" "~/work/scheme/SICP/4.4.3.scm" "~/work/scheme/SICP/4.4.1.scm" "~/work/scheme/SICP/4.4.2.scm" "~/work/scheme/SICP/sicp.scm" "~/work/scheme/fib-cc.scm" "~/work/scheme/SICP/3.5.scm" "~/work/scheme/SICP/stream.scm" "~/work/scheme/SICP/3.4.scm" "~/work/scheme/SICP/3.2.scm" "~/work/scheme/SICP/3.1.scm" "~/work/scheme/SICP/3.3.scm" "~/work/scheme/SICP/2.5.scm" "~/.emacs.d/elpa/clues-theme-20140922.2056/clues-theme-pkg.el" "~/.emacs.d/elpa/clues-theme-20140922.2056/clues-theme.el" "~/.emacs.d/elisp/emacs-clues-theme/README.md" "~/work/scheme/SICP/4.34.scm" "~/work/scheme/SICP/4.3.3.scm" "~/work/scheme/SICP/4.3.1.scm" "~/work/scheme/SICP/analyze-eval.scm" "~/.emacs.d/elisp/gauche-mode.el" "~/.emacs.d/elpa/auto-complete-20151211.227/auto-complete-autoloads.el" "~/.emacs.d/elpa/auto-complete-20151211.227/auto-complete-config.el" "~/.emacs.d/elpa/auto-complete-20151211.227/auto-complete-pkg.el" "~/.emacs.d/elpa/auto-complete-20151211.227/auto-complete.el" "/usr/local/Cellar/gauche/Gauche/src/port.c" "~/.emacs.d/ac-comphist.dat" "~/.emacs.d/history" "~/.emacs.d/recentf" "~/.emacs.d/elpa/slime-20151213.1142/dir" "~/.emacs.d/elpa/slime-20151213.1142/ChangeLog" "/usr/local/Cellar/swank-gauche-master/swank-gauche.scm" "/usr/local/Cellar/swank-gauche-master/swank-gauche.el" "/usr/local/Cellar/swank-gauche-master/README" "~/.emacs.d/elisp/swank-gauche.el" "/usr/local/Cellar/swank-gauche-master/dot.emacs" "~/work/scheme/atcoder/0109/a.scm" "~/work/scheme/SICP/4.2.3.scm" "~/work/scheme/SICP/4.31.scm" "~/work/scheme/define-curry.scm" "~/work/scheme/work.scm" "~/work/scheme/the-little-schemer.scm" "~/Documents/junk/2015-1217-203434.org" "~/.emacs.d/elpa/smartparens-20151213.1507/smartparens.el" "~/.emacs.d/elpa/smartparens-20151213.1507/smartparens-config.el" "~/work/scheme/SICP/1.1.scm" "~/work/commonlisp/practical-common-lisp/03.lisp" "~/work/site/static/schedule/schedule.css" "~/work/commonlisp/practical-common-lisp/my-cds.db" "~/work/scheme/SICP/1.3.scm" "~/.emacs.d/elpa/helm-swoop-20151022.1750/helm-swoop-autoloads.el" "~/.emacs.d/elpa/helm-swoop-20151022.1750/helm-swoop-pkg.el" "~/.emacs.d/elpa/helm-swoop-20151022.1750/helm-swoop.el" "TAGS"))
(setq buffer-name-history '("fib.rb" "adress.c" "string.rb" "string_spec.rb" ".gitignore" "version.rb" "exchange.rb" "i18n_to_snakecase" "README.md" "case_converter.gemspec" "print_reverse.c" "Rakefile" "print_reverse.c<rake>" "case_converter_spec.rb" "case_converter.rb" "spec_helper.rb" "Gemfile" ".#case_converter_spec.rb" "foo.rb" "convert.rb" "test.rb" "monte.c" "site.rb" "mysql-dotinstall.org" "mysql-ipa.org" "*Packages*" "*Help*" "*Compile-Log*" "2015-1115-002447.org" "2015-1116-232315.org" "2015-1117-001356.org" "2015-1118-001654.org" "2015-1122-230432.org" "2015-1123-235008.org" " *auto-async-byte-compile*" "init.el" "*terminal<1>*" "mysql-data.png" "MySQLのデータ型.png" "ssh_config" ".bashrc" "_form.html.slim" "_content_comment.html.slim" "_form.html.slim<test>" "_form.html.slim<stories>" "aliens.csv" "elvises.csv" "the_rest.csv" "sicp.org" "sicp-script.org" "sicp-script" "flexbox-froggy.org" ".gitignore<i18n_to_snakecase>" "xmptmp-out60650xCK.rb" "xmptmp-in60650k4D.rb" "rcodetools.el" "_wallpaper.html.slim" "_wallpaper_stories.html.slim" "_form.html.slim<test1>" "_content_comment.html.slim<test>" "_content_comment.html.slim<test1>" "*pry*" "temp" "humans.txt" "_global_nav.html.slim" "test1.txt" "*ruby*" "ruby" "*scratch*" "rbenv.el" "*Warnings*" "ruby-block.el" "gauche-mode.elc" "ema" "*Backtrace*" "Gemfile.lock" "application.css" "index.html" "application.css<css>" "has_many_association.rb" "time_zone.rb" "application.css<stylesheets>" "20160302125824_add_publisher_id_to_books.rb" "publisher.rb" "20160302131824_create_book_authors.rb" "book.rb" "author.rb" "20160302134241_drop_table.rb" "book_author.rb" "bo" "modeibo" "command.org" "rpro" "class.org" "2016-0302-121052.org" "Gemfile<book_admin>" "i18n-js.yml" "routes.rb" "config" "google.example.p12" "database.ci.yml" ".mysql_history" "database.yml" "test.html" "configure" "Makefile.in" "VERSION" "OCamlの無名関数は再帰を定義できない？ - (wat-aro).html" "indx.html" "default.css" "test.erb" "web-mode.el" "web-mode-autoloads.el" "web-mode-pkg.el" "geo2json.c" "gpsdata.csv" "output.json" "wo" "gistfile1.txt" "17.html" "09.html" "14.html" "24.html" "06.html" "foo.html" "04.html" ".bash_profile" "chpter2" "*scheme*" "*calculator*" "backspace.c" "stdio.h" "hello.c" "chapter1.c<c>" "*ocaml-toplevel*" "Makefile<metro>" "metro.mli" "OCamlMakefile" "2016-0218-203130." "2016-0218-203146." "2016-0218-203127." "redBlack.ml" "redblack.mli" "redblack.ml" "programming_fundamentals" ".git" "*spurious*" "redBlack.top" "redBlack.cmi" "redBlack.cmo" "rb_metro_network.ml" "tree.ml" "Makefile" "redBlack.mli" "redBlack.ml<programming_fundamentals>" "Makefile<programming_fundamentals>" "redBlack" "exception_metro_network.ml" "module_metro_network.ml" "tree.cmi" "tree.mli" "peo" "tree_t.ml" "minimum.ml" ".#minimum.ml" "metro_network.ml" "nenrei.ml" "erathosthenes.ml" "yconbinator.scm" "count.ml" "ex9.7.ml" "ex9.9.ml" "metro.ml" "koushin1.ml" "seiretsu.ml" "kyori_wo_hyoji.ml" "shokika.ml" "make_eki_list.ml" "ex8.ml" "eki_t.ml" "get_ekikan_kyori.ml" "*Buffer List*" "eval.scm" "2016-0213-121440.org" "ocaml" "7.1.ml" "person_t.ml" "8.5.ml" ".#ex9.9.ml" "ex9.8.ml" "sch" "5.49.scm" "SICP" "4.8.ml" "4.6.ml" "4.7.ml" "5.2.ml" "5.3.ml" "first.ml" "4.6.ml<ocaml>" "kyuyo.ml" "27-9.scm" ".ocamlinit" "5.5.6.scm" "5.5.7.scm" "compiler.scm" "map-instruction.scm" "5.48.scm" "register-machine-simulator.scm" "5.50.scm" ".#5.50.scm" "eceval.scm" "5.47.scm" "5.1.scm" "5.44.scm" "work.scm" "schi" ".#.#5.44.scm" ".#5.44.scm" "wat-aro@mac.local.455" "5.4.4.scm" "5.38d.scm" "5.38.scm" "5.38opencode.scm" "5.38-fac.scm" "5.5.scm" "5.37.scm" "5.30a.scm<SICP>" "5.35.scm" "5.36" "5.34.scm" "5.33a.scm" "5.33b.scm" "5.33diff.txt" "5.33dif.txt" "5.31.scm" "5.32.scm" "5.30a.scm" "5.28.scm" "5.25.scm" "2016-0203-030526.org" "*Helm Swoop Edit*" "2016-0203-015809.scm" "4.1.scm" "5.4.scm" "5.24.scm" "register-machine-simulater.scm" "5.3.scm" ".#5.3.scm" "4.1b.scm" "5.2-ex.scm" "5.2.scm" "*inferior-lisp*" "*slime-repl sbcl*" "script.lisp" "script.cl" ".#5.1.scm" "4.4.4-ex.scm" "4.4.1.scm" "4.4.3.scm" "4.4.2.scm" "*Edit Macro*" "4.4.4.scm" "sicp.scm" "fib-cc.scm" "3.5.scm" "stream.scm" "*Disabled Command*" "3.3.scm" "3.4.scm" "3.2.scm" "3.1.scm" "2.5.scm" "clues-theme.el" "clues-theme-pkg.el" "*Smartparens cheat sheet*" "*Customize Face: Font Lock Comment Delimiter Face*" "4.34.scm" "4.3.1.scm" "analyze-eval.scm" "gauche-mode.el" "4.3.3.scm" "*Completions*" ".#4.3.1.scm" "auto-complete-autoloads.el" "auto-complete-config.el" "auto-complete-pkg.el" "port.c" "ac-comphist.dat" "auto-save-list" "ChangeLog" "*slime-repl gauche*" "swank-gauche.scm" "README" "swank-gauche.el" "*slime-macroexpansion*" "*slime-inspector*" "dot.emacs" "welcom-to-atcoder.scm" "a.scm" "apply.scm" "4.2.scm" "4.2.3.scm" "2016-0109-124542.org" "4.31.scm" "my-app.scm" "define-curry.scm" "*slime-events*" ".#define-curry.scm" "*Shell Command Output*" "practice.scm" "*Helm Swoop*" "2015-1221-194427.scm" "2015-1220-210258.org" "the-little-schemer.scm" "2015-1219-223348.org" "*slime-compilation*" "debug.lisp" "2015-1217-203434.org" "smartparens.el" "smartparens-20151213.1507" "1.1.scm" "wat-aro" "*Messages*" "my-cds.db" "*Messages*" "helm-swoop-pkg.el" "*shell*"))
(setq yes-or-no-p-history '("yes"))
(setq extended-command-history '("align-regexp" "list-packages" "package-refresh-contents" "eval-buffer" "robe-start" "robe-start" "eval-buffer" "package-list-packages" "list-packages" "inf-ruby" "xmp" "package-refresh-contents" "package-install" "package-refresh-contents" "ruby-send-region-and-go" "ruby-send-region-and-go" "ruby-send-last-sexp" "ruby-send-region-and-go" "eval-current-buffer" "eval-current-buffer" "eval-current-buffer" "slime-eval-buffer" "eval-current-buffer" "slime-eval-buffer" "eval-current-buffer" "eval-current-buffer" "package-refresh-contents" "version" "calculator" "run-scheme" "scheme-other-window" "run-ocaml" "ac-complete" "merlin-jump" "merlin-jump" "merlin-jump" "merlin-mode" "merlin-mode" "ac-complete-merlin" "merlin-version" "completion-at-point" "package-refresh-contents" "paredit-mode" "enable-paredit-mode" "next-eval" "package-refresh-contents" "describe-key" "enable-paredit-mode" "slime" "eval-region" "sp-cheat-sheet" "customize-face-other-window" "package-refresh-contents" "gauche-mode" "scheme-mode" "describe-function" "describe-mode" "ac-start" "gauche" "down-list" "widen" "scheme-other-window" "scheme-other-window" "find-function" "endspace" "minimap-mode" "minimap-mode" "minimap-mode" "multi-term" "package-refresh-contents" "eshell" "shell" "menu-bar-mode"))
